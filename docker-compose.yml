# Docker Compose V2 compatible (no version required)

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: disease-community-db
    environment:
      POSTGRES_DB: disease_community
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend - Development
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: disease-community-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/disease_community
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  # Next.js Frontend - Development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: disease-community-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
      - NEXT_PUBLIC_AUTH0_DOMAIN=your-tenant.us.auth0.com
      - NEXT_PUBLIC_AUTH0_CLIENT_ID=your-client-id
      - NEXT_PUBLIC_AUTH0_AUDIENCE=https://api.disease-community.com
      - AUTH0_SECRET=use-openssl-rand-hex-32-to-generate
      - NEXT_PUBLIC_AUTH0_CALLBACK_URL=http://localhost:3000/api/auth/callback
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:
