"""Update user model for Auth0 profile management

Revision ID: 6b534d266a32
Revises: 000000000000
Create Date: 2025-10-28 12:55:21.869551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6b534d266a32'
down_revision: Union[str, None] = '000000000000'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create enum types first
    gender_enum = postgresql.ENUM('male', 'female', 'other', 'prefer_not_to_say', name='gender_enum')
    gender_enum.create(op.get_bind(), checkfirst=True)
    
    visibility_enum = postgresql.ENUM('public', 'limited', 'private', name='visibility_enum')
    visibility_enum.create(op.get_bind(), checkfirst=True)
    
    op.drop_index(op.f('ix_diseases_name'), table_name='diseases')
    op.create_unique_constraint(None, 'diseases', ['name'])
    op.add_column('users', sa.Column('auth0_id', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('users', sa.Column('display_name', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('username', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sa.String(length=500), nullable=True))
    op.add_column('users', sa.Column('gender', sa.Enum('male', 'female', 'other', 'prefer_not_to_say', name='gender_enum'), server_default='prefer_not_to_say', nullable=False))
    op.add_column('users', sa.Column('country', sa.String(length=2), server_default='jp', nullable=False))
    op.add_column('users', sa.Column('language', sa.String(length=5), server_default='ja', nullable=False))
    op.add_column('users', sa.Column('timezone', sa.String(length=50), server_default='Asia/Tokyo', nullable=False))
    op.add_column('users', sa.Column('profile_visibility', sa.Enum('public', 'limited', 'private', name='visibility_enum'), server_default='limited', nullable=False))
    op.add_column('users', sa.Column('show_email', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('users', sa.Column('show_online_status', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=320),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'date_of_birth',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_index(op.f('ix_users_auth0_id'), 'users', ['auth0_id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'phone')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'is_superuser')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(length=1024), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_auth0_id'), table_name='users')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'date_of_birth',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=320),
               existing_nullable=False)
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'show_online_status')
    op.drop_column('users', 'show_email')
    op.drop_column('users', 'profile_visibility')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'language')
    op.drop_column('users', 'country')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'username')
    op.drop_column('users', 'display_name')
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'auth0_id')
    op.drop_constraint(None, 'diseases', type_='unique')
    op.create_index(op.f('ix_diseases_name'), 'diseases', ['name'], unique=True)
    
    # Drop enum types
    visibility_enum = postgresql.ENUM('public', 'limited', 'private', name='visibility_enum')
    visibility_enum.drop(op.get_bind(), checkfirst=True)
    
    gender_enum = postgresql.ENUM('male', 'female', 'other', 'prefer_not_to_say', name='gender_enum')
    gender_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
